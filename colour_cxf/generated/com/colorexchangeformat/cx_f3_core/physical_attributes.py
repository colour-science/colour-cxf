"""This file was generated by xsdata, v25.4, on 2025-04-14 14:36:04

Generator: DataclassGenerator
See: https://xsdata.readthedocs.io/
"""

from __future__ import annotations

from dataclasses import dataclass, field

from colour_cxf.generated.com.colorexchangeformat.cx_f3_core.custom_attribute_string import (
    CustomAttributeString,
)
from colour_cxf.generated.com.colorexchangeformat.cx_f3_core.custom_attribute_value import (
    CustomAttributeValue,
)
from colour_cxf.generated.com.colorexchangeformat.cx_f3_core.finish_type import (
    FinishType,
)
from colour_cxf.generated.com.colorexchangeformat.cx_f3_core.gloss import Gloss
from colour_cxf.generated.com.colorexchangeformat.cx_f3_core.height import (
    Height,
)
from colour_cxf.generated.com.colorexchangeformat.cx_f3_core.image import Image
from colour_cxf.generated.com.colorexchangeformat.cx_f3_core.length import (
    Length,
)
from colour_cxf.generated.com.colorexchangeformat.cx_f3_core.opacity import (
    Opacity,
)
from colour_cxf.generated.com.colorexchangeformat.cx_f3_core.quantity import (
    Quantity,
)
from colour_cxf.generated.com.colorexchangeformat.cx_f3_core.substrate_type import (
    SubstrateType,
)
from colour_cxf.generated.com.colorexchangeformat.cx_f3_core.target_type import (
    TargetType,
)
from colour_cxf.generated.com.colorexchangeformat.cx_f3_core.thickness import (
    Thickness,
)
from colour_cxf.generated.com.colorexchangeformat.cx_f3_core.width import Width

__NAMESPACE__ = "http://colorexchangeformat.com/CxF3-core"


@dataclass
class PhysicalAttributes:
    """
    Object element that contains information regarding physical attributes of the
    object (images, size, quantity, etc.)
    """

    class Meta:
        namespace = "http://colorexchangeformat.com/CxF3-core"

    target_type: None | TargetType = field(
        default=None,
        metadata={
            "name": "TargetType",
            "type": "Element",
        },
    )
    finish_type: None | FinishType = field(
        default=None,
        metadata={
            "name": "FinishType",
            "type": "Element",
        },
    )
    substrate_type: None | SubstrateType = field(
        default=None,
        metadata={
            "name": "SubstrateType",
            "type": "Element",
        },
    )
    quantity: None | Quantity = field(
        default=None,
        metadata={
            "name": "Quantity",
            "type": "Element",
        },
    )
    height: None | Height = field(
        default=None,
        metadata={
            "name": "Height",
            "type": "Element",
        },
    )
    width: None | Width = field(
        default=None,
        metadata={
            "name": "Width",
            "type": "Element",
        },
    )
    length: None | Length = field(
        default=None,
        metadata={
            "name": "Length",
            "type": "Element",
        },
    )
    thickness: None | Thickness = field(
        default=None,
        metadata={
            "name": "Thickness",
            "type": "Element",
        },
    )
    gloss: list[Gloss] = field(
        default_factory=list,
        metadata={
            "name": "Gloss",
            "type": "Element",
        },
    )
    opacity: list[Opacity] = field(
        default_factory=list,
        metadata={
            "name": "Opacity",
            "type": "Element",
        },
    )
    custom_attribute_string: list[CustomAttributeString] = field(
        default_factory=list,
        metadata={
            "name": "CustomAttributeString",
            "type": "Element",
        },
    )
    custom_attribute_value: list[CustomAttributeValue] = field(
        default_factory=list,
        metadata={
            "name": "CustomAttributeValue",
            "type": "Element",
        },
    )
    image: list[Image] = field(
        default_factory=list,
        metadata={
            "name": "Image",
            "type": "Element",
        },
    )
